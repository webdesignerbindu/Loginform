{"version":3,"sources":["Forms.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","props","handlefirstnameChange","event","setState","firstname","target","value","handlelastnameChange","lastname","handleemailChange","email","handleTopicChange","topic","handleSubmit","alert","state","preventDefault","onSubmit","this","type","onChange","id","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmEeA,E,kDAjEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAQVC,sBAAsB,SAACC,GACnB,EAAKC,SAAS,CACVC,UAAUF,EAAMG,OAAOC,SAXb,EAclBC,qBAAqB,SAACL,GAClB,EAAKC,SAAS,CACVK,SAASN,EAAMG,OAAOC,SAhBZ,EAmBlBG,kBAAkB,SAACP,GACf,EAAKC,SAAS,CACVO,MAAMR,EAAMG,OAAOC,SArBT,EAwBlBK,kBAAkB,SAACT,GACf,EAAKC,SAAS,CACVS,MAAMV,EAAMG,OAAOC,SA1BT,EA6BlBO,aAAa,SAACX,GACVY,MAAM,aAAD,OAAc,EAAKC,MAAMX,UAAzB,oBAA8C,EAAKW,MAAMP,SAAzD,kBAA2E,EAAKO,MAAML,MAAtF,kBAAqG,EAAKK,MAAMH,QACrHV,EAAMc,kBA7BN,EAAKD,MAAM,CACP,UAAY,GACZ,SAAW,GACX,MAAQ,GACR,MAAQ,IANE,E,0CAiChB,WACI,OACI,gCACA,mDACC,uBAAME,SAAUC,KAAKL,aAArB,UACC,8BACA,+BAAI,gDACJ,uBAAOM,KAAK,OAAOb,MAAOY,KAAKH,MAAMX,UAAWgB,SAAUF,KAAKjB,6BAE/D,8BACA,+BAAI,+CACJ,uBAAOkB,KAAK,OAAOb,MAAOY,KAAKH,MAAMP,SAAUY,SAAUF,KAAKX,4BAE9D,8BACA,+BAAI,4CACJ,uBAAOY,KAAK,OAAOb,MAAOY,KAAKH,MAAML,MAAOU,SAAUF,KAAKT,yBAE3D,gCACA,+BAAI,4CACJ,yBAAQH,MAAOY,KAAKH,MAAMH,MAAOQ,SAAUF,KAAKP,kBAAhD,UACI,wBAAQL,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,0BAEA,wBAAQe,GAAG,MAAMF,KAAK,SAAtB,iC,GA3DAG,aCSLC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,OCOUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4f7e1a7.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nclass Forms extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            'firstname':'',\r\n            'lastname':'',\r\n            'email':'',\r\n            'topic':''\r\n        }\r\n    }\r\n    handlefirstnameChange=(event)=>{\r\n        this.setState({\r\n            firstname:event.target.value\r\n        })\r\n    }\r\n    handlelastnameChange=(event)=>{\r\n        this.setState({\r\n            lastname:event.target.value\r\n        })\r\n    }\r\n    handleemailChange=(event)=>{\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    }\r\n    handleTopicChange=(event)=>{\r\n        this.setState({\r\n            topic:event.target.value\r\n        })\r\n    }\r\n    handleSubmit=(event)=>{\r\n        alert(`FirstName:${this.state.firstname} LastName${this.state.lastname} Email:${this.state.email} Topic:${this.state.topic}`)\r\n        event.preventDefault()\r\n    }\r\n      render(){\r\n          return(\r\n              <div>\r\n              <h1>Registration Form</h1>\r\n               <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                <h2><label>First Name:</label>\r\n                <input type=\"text\" value={this.state.firstname} onChange={this.handlefirstnameChange}/></h2>\r\n                </div>\r\n                <div>\r\n                <h2><label>Last Name:</label>\r\n                <input type=\"text\" value={this.state.lastname} onChange={this.handlelastnameChange}/></h2>\r\n                </div>\r\n                <div>\r\n                <h2><label>E-mail:</label>\r\n                <input type=\"text\" value={this.state.email} onChange={this.handleemailChange}/></h2>\r\n                </div>\r\n                <div>\r\n                <h2><label>Choose:</label>\r\n                <select value={this.state.topic} onChange={this.handleTopicChange}>\r\n                    <option value='None'>None</option>\r\n                    <option value='React'>React</option>\r\n                    <option value='Angular'>Angular</option>\r\n                    <option value='Django'>Django</option>\r\n                </select></h2>\r\n                    <button id=\"sub\" type=\"submit\">submit</button></div>\r\n                    \r\n                </form>\r\n                </div>\r\n          ) \r\n      }\r\n}\r\nexport default Forms;","import './App.css';\nimport Forms from './Forms';\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Forms/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}